// Prisma Schema for EVOLVE Project
// This file is for type generation and migration management

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ====================================
// Early Access Program Models
// ====================================

model WaitingList {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String   @unique @db.VarChar(255)
  source    String   @default("evolve_page") @db.VarChar(50)
  metadata  Json     @default("{}")
  status    Status   @default(ACTIVE)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz

  @@index([email])
  @@index([createdAt])
  @@index([status])
  @@map("waiting_list")
}

model SurveyResponse {
  id                 String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sessionId          String    @default(dbgenerated("uuid_generate_v4()")) @map("session_id") @db.Uuid
  email              String?   @db.VarChar(255)
  experienceLevel    String?   @map("experience_level") @db.VarChar(50)
  failureReasons     String[]  @map("failure_reasons")
  additionalComments String?   @map("additional_comments")
  ipAddress          String?   @map("ip_address") @db.Inet
  userAgent          String?   @map("user_agent")
  completedAt        DateTime  @default(now()) @map("completed_at") @db.Timestamptz
  metadata           Json      @default("{}")

  @@index([sessionId])
  @@index([email])
  @@index([completedAt])
  @@index([experienceLevel])
  @@map("survey_responses")
}

model LaunchNotification {
  id               String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email            String               @db.VarChar(255)
  notificationType String               @map("notification_type") @db.VarChar(50)
  sentAt           DateTime?            @map("sent_at") @db.Timestamptz
  openedAt         DateTime?            @map("opened_at") @db.Timestamptz
  clickedAt        DateTime?            @map("clicked_at") @db.Timestamptz
  status           NotificationStatus   @default(PENDING)
  createdAt        DateTime             @default(now()) @map("created_at") @db.Timestamptz

  @@index([email])
  @@index([notificationType])
  @@index([status])
  @@map("launch_notifications")
}

model UserEngagement {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String?  @db.VarChar(255)
  sessionId String?  @map("session_id") @db.Uuid
  action    String   @db.VarChar(100)
  pageUrl   String?  @map("page_url")
  metadata  Json     @default("{}")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz

  @@index([email])
  @@index([action])
  @@index([createdAt])
  @@map("user_engagement")
}

// ====================================
// Enums
// ====================================

enum Status {
  ACTIVE        @map("active")
  UNSUBSCRIBED  @map("unsubscribed")
  BOUNCED       @map("bounced")
}

enum NotificationStatus {
  PENDING   @map("pending")
  SENT      @map("sent")
  DELIVERED @map("delivered")
  FAILED    @map("failed")
}

// ====================================
// Experience Level Enum for Better Type Safety
// ====================================

enum ExperienceLevel {
  NEVER       @map("never")
  PLANNING    @map("planning")
  FEW         @map("few")
  EXPERIENCED @map("experienced")
  EXPERT      @map("expert")
}